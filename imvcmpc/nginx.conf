events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API proxy to backend
        location /api/ {
            proxy_pass http://api:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Root serves login page directly
        location = / {
            alias /usr/share/nginx/html/logpage/;
            try_files /login.html =404;
        }
        
        # Serve login assets from root
        location ~ ^/(login\.css|login\.js)$ {
            alias /usr/share/nginx/html/logpage/$1;
        }

        # Login page
        location /login {
            alias /usr/share/nginx/html/logpage;
            try_files $uri $uri/ /logpage/login.html;
        }

        # Static files for different user roles
        location /shared/ {
            alias /usr/share/nginx/html/shared/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /financeofficer/ {
            alias /usr/share/nginx/html/financeofficer/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /marketingclerk/ {
            alias /usr/share/nginx/html/marketingclerk/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /ithead/ {
            alias /usr/share/nginx/html/ithead/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /logpage/ {
            alias /usr/share/nginx/html/logpage/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /assets/ {
            alias /usr/share/nginx/html/assets/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Handle CSS and JS files
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Handle image files
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Handle HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
